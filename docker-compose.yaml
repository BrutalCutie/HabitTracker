version: '3.9'
services:

  redis:
    image: redis:latest
    restart: on-failure

  db:
    image: postgres
    restart: on-failure
    env_file:
      - .env

    volumes:
      - pg_data:/var/lib/postgresql/data

    expose:
      - '5432'

    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - .env

    depends_on:
      db:
        condition: service_healthy

    volumes:
      - .:/app
      - /static_volume:/app/static

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_proxy
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - /var/www/html/habittracker/static:/app/static


  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    restart: on-failure
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
      - celery

volumes:
  pg_data:
  static-volume:
